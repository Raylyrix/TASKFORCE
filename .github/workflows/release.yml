name: Taskforce Mailer Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Rayvical
          POSTGRES_DB: taskforce_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Setup environment variables
        run: |
          cp env.example .env
          sed -i 's#^DATABASE_URL=.*#DATABASE_URL=postgresql://postgres:Rayvical@localhost:5432/taskforce_test#' .env || echo "DATABASE_URL=postgresql://postgres:Rayvical@localhost:5432/taskforce_test" >> .env
          sed -i 's#^REDIS_URL=.*#REDIS_URL=redis://localhost:6379#' .env || echo "REDIS_URL=redis://localhost:6379" >> .env
          sed -i 's#^JWT_SECRET=.*#JWT_SECRET=test-jwt-secret-key#' .env || echo "JWT_SECRET=test-jwt-secret-key" >> .env
          sed -i 's#^GMAIL_CLIENT_ID=.*#GMAIL_CLIENT_ID=test-client-id#' .env || echo "GMAIL_CLIENT_ID=test-client-id" >> .env
          sed -i 's#^GMAIL_CLIENT_SECRET=.*#GMAIL_CLIENT_SECRET=test-client-secret#' .env || echo "GMAIL_CLIENT_SECRET=test-client-secret" >> .env
          sed -i 's#^OPENROUTER_API_KEY=.*#OPENROUTER_API_KEY=test-api-key#' .env || echo "OPENROUTER_API_KEY=test-api-key" >> .env
          sed -i 's#^CONSENT_CONTENT=.*#CONSENT_CONTENT=false#' .env || echo "CONSENT_CONTENT=false" >> .env

      - name: Build packages
        run: pnpm build

      - name: Wait for PostgreSQL
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL... ($i/30)"
            sleep 2
          done

      - name: Run database migrations
        working-directory: apps/backend
        env:
          DATABASE_URL: postgresql://postgres:Rayvical@localhost:5432/taskforce_test
        run: pnpm prisma migrate deploy

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:Rayvical@localhost:5432/taskforce_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-jwt-secret-key
          GMAIL_CLIENT_ID: test-client-id
          GMAIL_CLIENT_SECRET: test-client-secret
          OPENROUTER_API_KEY: test-api-key
          CONSENT_CONTENT: false
        run: pnpm test:ci

      - name: Run linting
        run: pnpm lint

      - name: Create build artifacts
        run: |
          mkdir -p dist
          cp -r apps/backend/dist dist/backend
          cp -r apps/frontend/.next dist/frontend
          cp -r services/worker/dist dist/worker
          cp -r services/ai-service/dist dist/ai-service
          cp package.json pnpm-lock.yaml pnpm-workspace.yaml dist/
          cp -r electron-app dist/electron-app
          cp -r docker-compose.production.yml dist/
          cp -r env.example dist/
          cp -r README.md dist/
          cp -r RELEASE_NOTES_v5.0.0.md dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: taskforce-mailer-build
          path: dist/
          retention-days: 30

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: taskforce-mailer-build
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ðŸš€ Taskforce Mailer ${{ github.ref_name }} - Production Ready
          body_path: RELEASE_NOTES_v5.0.0.md
          draft: false
          prerelease: false
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

